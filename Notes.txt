arm path
GCC_ARM_PATH = "C:/Program Files (x86)/GNU Tools ARM Embedded/7 2017-q4-major/bin"


mbed compile -t GCC_ARM -m K64F
mbed compile -t GCC_ARM -m nucleo_f767zi  -c -j 4
mbed add https://github.com/Zeppelin15/libTest

//list compile options and macros
mbed compile -t GCC_ARM -m nucleo_f767zi --config  
 
edit \mbed-os\tools\profiles to ""cxx": ["-std=c++14","  to add c14++ support

check MBED_BUILD_TIMESTAMP for own clone of mbed how to set stuff

check get_config.py vir config shit - can macros add soos wat hul timestamp doen


mbed new .   - is bumping mbed.lib bersion try --create-only option
mbed test -t GCC_ARM -m nucleo_f767zi 

mbed test -t GCC_ARM -m nucleo_f767zi 


printf() vir messages in test en --v comand flag om messages te sien

TEST_ASSERT_MESSAGE


cannot change configs from app config for test thus adding testConfigs file to ConstalationDiagrams folder use --app-config flag

mbedgt --report-html html_report.html om repports te kry hy run all die tests wat hy kry

mbed test -t GCC_ARM -m nucleo_f767zi -n constalationdiagrams-tests-group1-testcase1 --app-config .\ConstalationDiagrams\testConfigs\BPSK.json
mbed test -t GCC_ARM -m nucleo_f767zi -n constalationdiagrams-tests-group1-testcase1 --app-config .\ConstalationDiagrams\testConfigs\PSK_4.json
mbed test -t GCC_ARM -m nucleo_f767zi -n constalationdiagrams-tests-group1-testcase1 --app-config .\ConstalationDiagrams\testConfigs\QAM_16.json
mbed test -t GCC_ARM -m nucleo_f767zi -n constalationdiagrams-tests-group1-testcase1 --app-config .\ConstalationDiagrams\testConfigs\QPSK.json

analog out PA_4
analog out PA_5


exclude list for search E:\mBedCli\mbedProjectTest\mbed-os\targets\TARGET_STM\TARGET_STM32F0,E:\mBedCli\mbedProjectTest\mbed-os\targets\TARGET_STM\TARGET_STM32F1,E:\mBedCli\mbedProjectTest\mbed-os\targets\TARGET_STM\TARGET_STM32F2,E:\mBedCli\mbedProjectTest\mbed-os\targets\TARGET_STM\TARGET_STM32F3,E:\mBedCli\mbedProjectTest\mbed-os\targets\TARGET_STM\TARGET_STM32F4,E:\mBedCli\mbedProjectTest\mbed-os\targets\TARGET_STM\TARGET_STM32L0,E:\mBedCli\mbedProjectTest\mbed-os\targets\TARGET_STM\TARGET_STM32L1,E:\mBedCli\mbedProjectTest\mbed-os\targets\TARGET_STM\TARGET_STM32L4
include list for search E:\mBedCli\mbedProjectTest\mbed-os\targets\TARGET_STM


dma notes - the chip has a double buffer mode but not implemented in the hal drivers thus can use large normal buffer and check half full full flags


dac example https://github.com/sbaconbits/stm32f4_first_look/blob/master/dac_dma.c

sync with front end?

assumin fucking synched


Sending the same buffer while it's still sending causes a full transfer period block